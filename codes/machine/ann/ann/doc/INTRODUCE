	这个库的目的是支持神经网络的编程。目前实现了基本的神经元类和BP前向多层网络。
	代码使用C++编写，使用了很多98标准中的特性，一些过时的编译器可能无法编译。比较典型的是STL和运行时类识别。但是有一个广为人知的特性-异常并没有被使用。我的想法是错误和异常要区分开，我把能报告给用户的称为错误，否则就是异常。错误处理是一个明显的流程, 而发生异常则必须终止。想象一下即使抛出了异常你又会怎么去处理呢？反正就我看来处理异常基本上是个白搭功夫的负担，不如简单地assert条件成立来的有用。这里我们做了一个假设：程序运行之前就存在的错误必须在运行前被发现，而依赖于运行环境而产生的错误则必须在运行时显式地被制止。
